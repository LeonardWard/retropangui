diff -Naur emulationstation/es-app/src/SystemScreenSaver.cpp emulationstation_ab_swap/es-app/src/SystemScreenSaver.cpp
--- emulationstation/es-app/src/SystemScreenSaver.cpp	2025-10-19 16:30:22.774699459 +0900
+++ emulationstation_ab_swap/es-app/src/SystemScreenSaver.cpp	2025-10-19 16:41:27.494704960 +0900
@@ -82,7 +82,7 @@
 		bool is_previous_input = config->isMappedLike("left", input);
 		bool is_favorite_input = config->isMappedLike("y", input);
 		bool is_start_input = config->isMappedTo("start", input);
-		bool is_select_game_input =  config->isMappedTo("a", input);
+		bool is_select_game_input =  config->isMappedTo("b", input);
 		bool use_gamelistmedia = screensaver_type == "random video" || !Settings::getInstance()->getBool("SlideshowScreenSaverCustomMediaSource");
 
 		if (input.value != 0)
diff -Naur emulationstation/es-app/src/components/AsyncReqComponent.cpp emulationstation_ab_swap/es-app/src/components/AsyncReqComponent.cpp
--- emulationstation/es-app/src/components/AsyncReqComponent.cpp	2025-10-19 16:30:22.774699459 +0900
+++ emulationstation_ab_swap/es-app/src/components/AsyncReqComponent.cpp	2025-10-19 16:41:27.490704960 +0900
@@ -12,7 +12,7 @@
 
 bool AsyncReqComponent::input(InputConfig* config, Input input)
 {
-	if(input.value != 0 && config->isMappedTo("b", input))
+	if(input.value != 0 && config->isMappedTo("a", input))
 	{
 		if(mCancelFunc)
 			mCancelFunc();
@@ -48,6 +48,6 @@
 std::vector<HelpPrompt> AsyncReqComponent::getHelpPrompts()
 {
 	std::vector<HelpPrompt> prompts;
-	prompts.push_back(HelpPrompt("b", "cancel"));
+	prompts.push_back(HelpPrompt("a", "cancel"));
 	return prompts;
 }
diff -Naur emulationstation/es-app/src/components/RatingComponent.cpp emulationstation_ab_swap/es-app/src/components/RatingComponent.cpp
--- emulationstation/es-app/src/components/RatingComponent.cpp	2025-10-19 16:30:22.774699459 +0900
+++ emulationstation_ab_swap/es-app/src/components/RatingComponent.cpp	2025-10-19 16:41:27.490704960 +0900
@@ -121,7 +121,7 @@
 
 bool RatingComponent::input(InputConfig* config, Input input)
 {
-	if(config->isMappedTo("a", input) && input.value != 0)
+	if(config->isMappedTo("b", input) && input.value != 0)
 	{
 		mValue += 1.f / NUM_RATING_STARS;
 		if(mValue > 1.0f)
@@ -166,6 +166,6 @@
 std::vector<HelpPrompt> RatingComponent::getHelpPrompts()
 {
 	std::vector<HelpPrompt> prompts;
-	prompts.push_back(HelpPrompt("a", "add star"));
+	prompts.push_back(HelpPrompt("b", "add star"));
 	return prompts;
 }
diff -Naur emulationstation/es-app/src/components/ScraperSearchComponent.cpp emulationstation_ab_swap/es-app/src/components/ScraperSearchComponent.cpp
--- emulationstation/es-app/src/components/ScraperSearchComponent.cpp	2025-10-19 16:30:22.774699459 +0900
+++ emulationstation_ab_swap/es-app/src/components/ScraperSearchComponent.cpp	2025-10-19 16:41:27.490704960 +0900
@@ -341,7 +341,7 @@
 
 bool ScraperSearchComponent::input(InputConfig* config, Input input)
 {
-	if(config->isMappedTo("a", input) && input.value != 0)
+	if(config->isMappedTo("b", input) && input.value != 0)
 	{
 		if(mBlockAccept)
 			return true;
@@ -463,7 +463,7 @@
 {
 	std::vector<HelpPrompt> prompts = mGrid.getHelpPrompts();
 	if(getSelectedIndex() != -1)
-		prompts.push_back(HelpPrompt("a", "accept result"));
+		prompts.push_back(HelpPrompt("b", "accept result"));
 
 	return prompts;
 }
diff -Naur emulationstation/es-app/src/guis/GuiCollectionSystemsOptions.cpp emulationstation_ab_swap/es-app/src/guis/GuiCollectionSystemsOptions.cpp
--- emulationstation/es-app/src/guis/GuiCollectionSystemsOptions.cpp	2025-10-19 16:30:22.774699459 +0900
+++ emulationstation_ab_swap/es-app/src/guis/GuiCollectionSystemsOptions.cpp	2025-10-19 16:41:27.482704960 +0900
@@ -277,7 +277,7 @@
 	if(consumed)
 		return true;
 
-	if(config->isMappedTo("b", input) && input.value != 0)
+	if(config->isMappedTo("a", input) && input.value != 0)
 	{
 		applySettings();
 	}
@@ -289,6 +289,6 @@
 std::vector<HelpPrompt> GuiCollectionSystemsOptions::getHelpPrompts()
 {
 	std::vector<HelpPrompt> prompts = mMenu.getHelpPrompts();
-	prompts.push_back(HelpPrompt("b", "back"));
+	prompts.push_back(HelpPrompt("a", "back"));
 	return prompts;
 }
diff -Naur emulationstation/es-app/src/guis/GuiGameScraper.cpp emulationstation_ab_swap/es-app/src/guis/GuiGameScraper.cpp
--- emulationstation/es-app/src/guis/GuiGameScraper.cpp	2025-10-19 16:30:22.778699459 +0900
+++ emulationstation_ab_swap/es-app/src/guis/GuiGameScraper.cpp	2025-10-19 16:41:27.490704960 +0900
@@ -94,7 +94,7 @@
 
 bool GuiGameScraper::input(InputConfig* config, Input input)
 {
-	if(config->isMappedTo("b", input) && input.value)
+	if(config->isMappedTo("a", input) && input.value)
 	{
 		PowerSaver::resume();
 		delete this;
diff -Naur emulationstation/es-app/src/guis/GuiGamelistFilter.cpp emulationstation_ab_swap/es-app/src/guis/GuiGamelistFilter.cpp
--- emulationstation/es-app/src/guis/GuiGamelistFilter.cpp	2025-10-19 16:30:22.778699459 +0900
+++ emulationstation_ab_swap/es-app/src/guis/GuiGamelistFilter.cpp	2025-10-19 16:41:27.486704960 +0900
@@ -100,7 +100,7 @@
 	if(consumed)
 		return true;
 
-	if(config->isMappedTo("b", input) && input.value != 0)
+	if(config->isMappedTo("a", input) && input.value != 0)
 	{
 		applyFilters();
 	}
@@ -112,6 +112,6 @@
 std::vector<HelpPrompt> GuiGamelistFilter::getHelpPrompts()
 {
 	std::vector<HelpPrompt> prompts = mMenu.getHelpPrompts();
-	prompts.push_back(HelpPrompt("b", "back"));
+	prompts.push_back(HelpPrompt("a", "back"));
 	return prompts;
 }
diff -Naur emulationstation/es-app/src/guis/GuiGamelistOptions.cpp emulationstation_ab_swap/es-app/src/guis/GuiGamelistOptions.cpp
--- emulationstation/es-app/src/guis/GuiGamelistOptions.cpp	2025-10-19 16:30:22.778699459 +0900
+++ emulationstation_ab_swap/es-app/src/guis/GuiGamelistOptions.cpp	2025-10-19 16:41:27.490704960 +0900
@@ -63,7 +63,7 @@
 			row.addElement(std::make_shared<TextComponent>(mWindow, "JUMP TO ...", Font::get(FONT_SIZE_MEDIUM), 0x777777FF), true);
 			row.addElement(mJumpToLetterList, false);
 			row.input_handler = [&](InputConfig* config, Input input) {
-				if(config->isMappedTo("a", input) && input.value)
+				if(config->isMappedTo("b", input) && input.value)
 				{
 					jumpToLetter();
 					return true;
@@ -314,7 +314,7 @@
 
 bool GuiGamelistOptions::input(InputConfig* config, Input input)
 {
-	if((config->isMappedTo("b", input) || config->isMappedTo("select", input)) && input.value)
+	if((config->isMappedTo("a", input) || config->isMappedTo("select", input)) && input.value)
 	{
 		delete this;
 		return true;
@@ -333,7 +333,7 @@
 std::vector<HelpPrompt> GuiGamelistOptions::getHelpPrompts()
 {
 	auto prompts = mMenu.getHelpPrompts();
-	prompts.push_back(HelpPrompt("b", "close"));
+	prompts.push_back(HelpPrompt("a", "close"));
 	return prompts;
 }
 
diff -Naur emulationstation/es-app/src/guis/GuiMenu.cpp emulationstation_ab_swap/es-app/src/guis/GuiMenu.cpp
--- emulationstation/es-app/src/guis/GuiMenu.cpp	2025-10-19 16:30:22.778699459 +0900
+++ emulationstation_ab_swap/es-app/src/guis/GuiMenu.cpp	2025-10-19 16:41:27.482704960 +0900
@@ -648,7 +648,7 @@
 	if(GuiComponent::input(config, input))
 		return true;
 
-	if((config->isMappedTo("b", input) || config->isMappedTo("start", input)) && input.value != 0)
+	if((config->isMappedTo("a", input) || config->isMappedTo("start", input)) && input.value != 0)
 	{
 		delete this;
 		return true;
@@ -668,7 +668,7 @@
 {
 	std::vector<HelpPrompt> prompts;
 	prompts.push_back(HelpPrompt("up/down", "choose"));
-	prompts.push_back(HelpPrompt("a", "select"));
+	prompts.push_back(HelpPrompt("b", "select"));
 	prompts.push_back(HelpPrompt("start", "close"));
 	return prompts;
 }
diff -Naur emulationstation/es-app/src/guis/GuiMetaDataEd.cpp emulationstation_ab_swap/es-app/src/guis/GuiMetaDataEd.cpp
--- emulationstation/es-app/src/guis/GuiMetaDataEd.cpp	2025-10-19 16:30:22.778699459 +0900
+++ emulationstation_ab_swap/es-app/src/guis/GuiMetaDataEd.cpp	2025-10-19 16:41:27.482704960 +0900
@@ -318,7 +318,7 @@
 		return true;
 
 	const bool isStart = config->isMappedTo("start", input);
-	if(input.value != 0 && (config->isMappedTo("b", input) || isStart))
+	if(input.value != 0 && (config->isMappedTo("a", input) || isStart))
 	{
 		close(isStart);
 		return true;
@@ -330,7 +330,7 @@
 std::vector<HelpPrompt> GuiMetaDataEd::getHelpPrompts()
 {
 	std::vector<HelpPrompt> prompts = mGrid.getHelpPrompts();
-	prompts.push_back(HelpPrompt("b", "back"));
+	prompts.push_back(HelpPrompt("a", "back"));
 	prompts.push_back(HelpPrompt("start", "close"));
 	return prompts;
 }
diff -Naur emulationstation/es-app/src/guis/GuiRandomCollectionOptions.cpp emulationstation_ab_swap/es-app/src/guis/GuiRandomCollectionOptions.cpp
--- emulationstation/es-app/src/guis/GuiRandomCollectionOptions.cpp	2025-10-19 16:30:22.778699459 +0900
+++ emulationstation_ab_swap/es-app/src/guis/GuiRandomCollectionOptions.cpp	2025-10-19 16:41:27.482704960 +0900
@@ -214,7 +214,7 @@
 	if(consumed)
 		return true;
 
-	if(config->isMappedTo("b", input) && input.value != 0)
+	if(config->isMappedTo("a", input) && input.value != 0)
 		saveSettings();
 
 	return false;
@@ -223,6 +223,6 @@
 std::vector<HelpPrompt> GuiRandomCollectionOptions::getHelpPrompts()
 {
 	std::vector<HelpPrompt> prompts = mMenu.getHelpPrompts();
-	prompts.push_back(HelpPrompt("b", "back"));
+	prompts.push_back(HelpPrompt("a", "back"));
 	return prompts;
 }
diff -Naur emulationstation/es-app/src/guis/GuiScraperStart.cpp emulationstation_ab_swap/es-app/src/guis/GuiScraperStart.cpp
--- emulationstation/es-app/src/guis/GuiScraperStart.cpp	2025-10-19 16:30:22.778699459 +0900
+++ emulationstation_ab_swap/es-app/src/guis/GuiScraperStart.cpp	2025-10-19 16:41:27.486704960 +0900
@@ -101,7 +101,7 @@
 	if(consumed)
 		return true;
 
-	if(input.value != 0 && config->isMappedTo("b", input))
+	if(input.value != 0 && config->isMappedTo("a", input))
 	{
 		delete this;
 		return true;
@@ -122,7 +122,7 @@
 std::vector<HelpPrompt> GuiScraperStart::getHelpPrompts()
 {
 	std::vector<HelpPrompt> prompts = mMenu.getHelpPrompts();
-	prompts.push_back(HelpPrompt("b", "back"));
+	prompts.push_back(HelpPrompt("a", "back"));
 	prompts.push_back(HelpPrompt("start", "close"));
 	return prompts;
 }
diff -Naur emulationstation/es-app/src/guis/GuiScreensaverOptions.cpp emulationstation_ab_swap/es-app/src/guis/GuiScreensaverOptions.cpp
--- emulationstation/es-app/src/guis/GuiScreensaverOptions.cpp	2025-10-19 16:30:22.778699459 +0900
+++ emulationstation_ab_swap/es-app/src/guis/GuiScreensaverOptions.cpp	2025-10-19 16:41:27.486704960 +0900
@@ -34,7 +34,7 @@
 
 bool GuiScreensaverOptions::input(InputConfig* config, Input input)
 {
-	if(config->isMappedTo("b", input) && input.value != 0)
+	if(config->isMappedTo("a", input) && input.value != 0)
 	{
 		delete this;
 		return true;
@@ -63,7 +63,7 @@
 {
 	std::vector<HelpPrompt> prompts = mMenu.getHelpPrompts();
 
-	prompts.push_back(HelpPrompt("b", "back"));
+	prompts.push_back(HelpPrompt("a", "back"));
 	prompts.push_back(HelpPrompt("start", "close"));
 
 	return prompts;
diff -Naur emulationstation/es-app/src/guis/GuiSettings.cpp emulationstation_ab_swap/es-app/src/guis/GuiSettings.cpp
--- emulationstation/es-app/src/guis/GuiSettings.cpp	2025-10-19 16:30:22.778699459 +0900
+++ emulationstation_ab_swap/es-app/src/guis/GuiSettings.cpp	2025-10-19 16:41:27.490704960 +0900
@@ -33,7 +33,7 @@
 
 bool GuiSettings::input(InputConfig* config, Input input)
 {
-	if(config->isMappedTo("b", input) && input.value != 0)
+	if(config->isMappedTo("a", input) && input.value != 0)
 	{
 		delete this;
 		return true;
@@ -62,7 +62,7 @@
 {
 	std::vector<HelpPrompt> prompts = mMenu.getHelpPrompts();
 
-	prompts.push_back(HelpPrompt("b", "back"));
+	prompts.push_back(HelpPrompt("a", "back"));
 	prompts.push_back(HelpPrompt("start", "close"));
 
 	return prompts;
diff -Naur emulationstation/es-app/src/views/SystemView.cpp emulationstation_ab_swap/es-app/src/views/SystemView.cpp
--- emulationstation/es-app/src/views/SystemView.cpp	2025-10-19 16:30:22.782699459 +0900
+++ emulationstation_ab_swap/es-app/src/views/SystemView.cpp	2025-10-19 16:41:27.502704960 +0900
@@ -177,7 +177,7 @@
 			break;
 		}
 
-		if(config->isMappedTo("a", input))
+		if(config->isMappedTo("b", input))
 		{
 			stopScrolling();
 			ViewController::get()->goToGameList(getSelected());
@@ -380,7 +380,7 @@
 		prompts.push_back(HelpPrompt("up/down", "choose"));
 	else
 		prompts.push_back(HelpPrompt("left/right", "choose"));
-	prompts.push_back(HelpPrompt("a", "select"));
+	prompts.push_back(HelpPrompt("b", "select"));
 	prompts.push_back(HelpPrompt("x", "random"));
 
 	if (!UIModeController::getInstance()->isUIModeKid() && Settings::getInstance()->getBool("ScreenSaverControls"))
diff -Naur emulationstation/es-app/src/views/UIModeController.cpp emulationstation_ab_swap/es-app/src/views/UIModeController.cpp
--- emulationstation/es-app/src/views/UIModeController.cpp	2025-10-19 16:30:22.782699459 +0900
+++ emulationstation_ab_swap/es-app/src/views/UIModeController.cpp	2025-10-19 16:41:27.502704960 +0900
@@ -124,10 +124,10 @@
 			out += Utils::String::unicode2Chars(0x2192); // arrow pointing right
 			break;
 		case 'a':
-			out += "A";
+			out += "B";
 			break;
 		case 'b':
-			out += "B";
+			out += "A";
 			break;
 		case 'x':
 			out += "X";
diff -Naur emulationstation/es-app/src/views/gamelist/BasicGameListView.cpp emulationstation_ab_swap/es-app/src/views/gamelist/BasicGameListView.cpp
--- emulationstation/es-app/src/views/gamelist/BasicGameListView.cpp	2025-10-19 16:30:22.782699459 +0900
+++ emulationstation_ab_swap/es-app/src/views/gamelist/BasicGameListView.cpp	2025-10-19 16:41:27.502704960 +0900
@@ -213,8 +213,8 @@
 	if(Settings::getInstance()->getBool("QuickSystemSelect"))
 		prompts.push_back(HelpPrompt("left/right", "system"));
 	prompts.push_back(HelpPrompt("up/down", "choose"));
-	prompts.push_back(HelpPrompt("a", "launch"));
-	prompts.push_back(HelpPrompt("b", "back"));
+	prompts.push_back(HelpPrompt("b", "launch"));
+	prompts.push_back(HelpPrompt("a", "back"));
 	if(!UIModeController::getInstance()->isUIModeKid())
 		prompts.push_back(HelpPrompt("select", "options"));
 	if(mRoot->getSystem()->isGameSystem())
diff -Naur emulationstation/es-app/src/views/gamelist/GridGameListView.cpp emulationstation_ab_swap/es-app/src/views/gamelist/GridGameListView.cpp
--- emulationstation/es-app/src/views/gamelist/GridGameListView.cpp	2025-10-19 16:30:22.782699459 +0900
+++ emulationstation_ab_swap/es-app/src/views/gamelist/GridGameListView.cpp	2025-10-19 16:41:27.502704960 +0900
@@ -477,8 +477,8 @@
 	if(Settings::getInstance()->getBool("QuickSystemSelect"))
 		prompts.push_back(HelpPrompt("lr", "system"));
 	prompts.push_back(HelpPrompt("up/down/left/right", "choose"));
-	prompts.push_back(HelpPrompt("a", "launch"));
-	prompts.push_back(HelpPrompt("b", "back"));
+	prompts.push_back(HelpPrompt("b", "launch"));
+	prompts.push_back(HelpPrompt("a", "back"));
 	if(!UIModeController::getInstance()->isUIModeKid())
 		prompts.push_back(HelpPrompt("select", "options"));
 	if(mRoot->getSystem()->isGameSystem())
diff -Naur emulationstation/es-app/src/views/gamelist/ISimpleGameListView.cpp emulationstation_ab_swap/es-app/src/views/gamelist/ISimpleGameListView.cpp
--- emulationstation/es-app/src/views/gamelist/ISimpleGameListView.cpp	2025-10-19 16:30:22.782699459 +0900
+++ emulationstation_ab_swap/es-app/src/views/gamelist/ISimpleGameListView.cpp	2025-10-19 16:41:27.502704960 +0900
@@ -81,7 +81,7 @@
 {
 	if(input.value != 0)
 	{
-		if(config->isMappedTo("a", input))
+		if(config->isMappedTo("b", input))
 		{
 			FileData* cursor = getCursor();
 			if(cursor->getType() == GAME)
@@ -100,7 +100,7 @@
 			}
 
 			return true;
-		}else if(config->isMappedTo("b", input))
+		}else if(config->isMappedTo("a", input))
 		{
 			if(mCursorStack.size())
 			{
diff -Naur emulationstation/es-core/src/InputManager.cpp emulationstation_ab_swap/es-core/src/InputManager.cpp
--- emulationstation/es-core/src/InputManager.cpp	2025-10-19 16:30:22.786699459 +0900
+++ emulationstation_ab_swap/es-core/src/InputManager.cpp	2025-10-19 16:41:27.514704960 +0900
@@ -333,7 +333,7 @@
 	cfg->mapInput("right", Input(DEVICE_KEYBOARD, TYPE_KEY, SDLK_RIGHT, 1, true));
 
 	cfg->mapInput("a", Input(DEVICE_KEYBOARD, TYPE_KEY, SDLK_RETURN, 1, true));
-	cfg->mapInput("b", Input(DEVICE_KEYBOARD, TYPE_KEY, SDLK_ESCAPE, 1, true));
+	cfg->mapInput("b", Input(DEVICE_KEYBOARD, TYPE_KEY, SDLK_RETURN, 1, true));
 	cfg->mapInput("start", Input(DEVICE_KEYBOARD, TYPE_KEY, SDLK_F1, 1, true));
 	cfg->mapInput("select", Input(DEVICE_KEYBOARD, TYPE_KEY, SDLK_F2, 1, true));
 
diff -Naur emulationstation/es-core/src/components/ButtonComponent.cpp emulationstation_ab_swap/es-core/src/components/ButtonComponent.cpp
--- emulationstation/es-core/src/components/ButtonComponent.cpp	2025-10-19 16:30:22.790699459 +0900
+++ emulationstation_ab_swap/es-core/src/components/ButtonComponent.cpp	2025-10-19 16:41:27.510704960 +0900
@@ -27,7 +27,7 @@
 
 bool ButtonComponent::input(InputConfig* config, Input input)
 {
-	if(config->isMappedTo("a", input) && input.value != 0)
+	if(config->isMappedTo("b", input) && input.value != 0)
 	{
 		if(mPressedFunc && mEnabled)
 			mPressedFunc();
@@ -114,6 +114,6 @@
 std::vector<HelpPrompt> ButtonComponent::getHelpPrompts()
 {
 	std::vector<HelpPrompt> prompts;
-	prompts.push_back(HelpPrompt("a", mHelpText.empty() ? mText.c_str() : mHelpText.c_str()));
+	prompts.push_back(HelpPrompt("b", mHelpText.empty() ? mText.c_str() : mHelpText.c_str()));
 	return prompts;
 }
diff -Naur emulationstation/es-core/src/components/DateTimeEditComponent.cpp emulationstation_ab_swap/es-core/src/components/DateTimeEditComponent.cpp
--- emulationstation/es-core/src/components/DateTimeEditComponent.cpp	2025-10-19 16:30:22.790699459 +0900
+++ emulationstation_ab_swap/es-core/src/components/DateTimeEditComponent.cpp	2025-10-19 16:41:27.510704960 +0900
@@ -22,7 +22,7 @@
 	if(input.value == 0)
 		return false;
 
-	if(config->isMappedTo("a", input))
+	if(config->isMappedTo("b", input))
 	{
 		if(mDisplayMode != DISP_RELATIVE_TO_NOW) //don't allow editing for relative times
 			mEditing = !mEditing;
@@ -45,7 +45,7 @@
 
 	if(mEditing)
 	{
-		if(config->isMappedTo("b", input))
+		if(config->isMappedTo("a", input))
 		{
 			mEditing = false;
 			mTime = mTimeBeforeEdit;
diff -Naur emulationstation/es-core/src/components/ImageComponent.cpp emulationstation_ab_swap/es-core/src/components/ImageComponent.cpp
--- emulationstation/es-core/src/components/ImageComponent.cpp	2025-10-19 16:30:22.790699459 +0900
+++ emulationstation_ab_swap/es-core/src/components/ImageComponent.cpp	2025-10-19 16:41:27.510704960 +0900
@@ -438,6 +438,6 @@
 std::vector<HelpPrompt> ImageComponent::getHelpPrompts()
 {
 	std::vector<HelpPrompt> ret;
-	ret.push_back(HelpPrompt("a", "select"));
+	ret.push_back(HelpPrompt("b", "select"));
 	return ret;
 }
diff -Naur emulationstation/es-core/src/components/SwitchComponent.cpp emulationstation_ab_swap/es-core/src/components/SwitchComponent.cpp
--- emulationstation/es-core/src/components/SwitchComponent.cpp	2025-10-19 16:30:22.794699459 +0900
+++ emulationstation_ab_swap/es-core/src/components/SwitchComponent.cpp	2025-10-19 16:41:27.506704960 +0900
@@ -16,7 +16,7 @@
 
 bool SwitchComponent::input(InputConfig* config, Input input)
 {
-	if(config->isMappedTo("a", input) && input.value)
+	if(config->isMappedTo("b", input) && input.value)
 	{
 		mState = !mState;
 		onStateChanged();
@@ -71,6 +71,6 @@
 std::vector<HelpPrompt> SwitchComponent::getHelpPrompts()
 {
 	std::vector<HelpPrompt> prompts;
-	prompts.push_back(HelpPrompt("a", "change"));
+	prompts.push_back(HelpPrompt("b", "change"));
 	return prompts;
 }
diff -Naur emulationstation/es-core/src/components/TextEditComponent.cpp emulationstation_ab_swap/es-core/src/components/TextEditComponent.cpp
--- emulationstation/es-core/src/components/TextEditComponent.cpp	2025-10-19 16:30:22.794699459 +0900
+++ emulationstation_ab_swap/es-core/src/components/TextEditComponent.cpp	2025-10-19 16:41:27.506704960 +0900
@@ -102,7 +102,7 @@
 		return false;
 	}
 
-	if((config->isMappedTo("a", input) || (config->getDeviceId() == DEVICE_KEYBOARD && input.id == SDLK_RETURN)) && mFocused && !mEditing)
+	if((config->isMappedTo("b", input) || (config->getDeviceId() == DEVICE_KEYBOARD && input.id == SDLK_RETURN)) && mFocused && !mEditing)
 	{
 		startEditing();
 		return true;
@@ -122,7 +122,7 @@
 			return true;
 		}
 
-		if((config->getDeviceId() == DEVICE_KEYBOARD && input.id == SDLK_ESCAPE) || (config->getDeviceId() != DEVICE_KEYBOARD && config->isMappedTo("b", input)))
+		if((config->getDeviceId() == DEVICE_KEYBOARD && input.id == SDLK_ESCAPE) || (config->getDeviceId() != DEVICE_KEYBOARD && config->isMappedTo("a", input)))
 		{
 			stopEditing();
 			return true;
@@ -302,9 +302,9 @@
 	if(mEditing)
 	{
 		prompts.push_back(HelpPrompt("up/down/left/right", "move cursor"));
-		prompts.push_back(HelpPrompt("b", "stop editing"));
+		prompts.push_back(HelpPrompt("a", "stop editing"));
 	}else{
-		prompts.push_back(HelpPrompt("a", "edit"));
+		prompts.push_back(HelpPrompt("b", "edit"));
 	}
 	return prompts;
 }
diff -Naur emulationstation/es-core/src/components/VideoComponent.cpp emulationstation_ab_swap/es-core/src/components/VideoComponent.cpp
--- emulationstation/es-core/src/components/VideoComponent.cpp	2025-10-19 16:30:22.794699459 +0900
+++ emulationstation_ab_swap/es-core/src/components/VideoComponent.cpp	2025-10-19 16:41:27.510704960 +0900
@@ -212,7 +212,7 @@
 std::vector<HelpPrompt> VideoComponent::getHelpPrompts()
 {
 	std::vector<HelpPrompt> ret;
-	ret.push_back(HelpPrompt("a", "select"));
+	ret.push_back(HelpPrompt("b", "select"));
 	return ret;
 }
 
diff -Naur emulationstation/es-core/src/guis/GuiInputConfig.cpp emulationstation_ab_swap/es-core/src/guis/GuiInputConfig.cpp
--- emulationstation/es-core/src/guis/GuiInputConfig.cpp	2025-10-19 16:30:22.794699459 +0900
+++ emulationstation_ab_swap/es-core/src/guis/GuiInputConfig.cpp	2025-10-19 16:41:27.506704960 +0900
@@ -122,7 +122,7 @@
 			// if we're not configuring, start configuring when A is pressed
 			if(!mConfiguringRow)
 			{
-				if(config->isMappedTo("a", input) && input.value)
+				if(config->isMappedTo("b", input) && input.value)
 				{
 					mList->stopScrolling();
 					mConfiguringRow = true;
diff -Naur emulationstation/es-core/src/guis/GuiMsgBox.cpp emulationstation_ab_swap/es-core/src/guis/GuiMsgBox.cpp
--- emulationstation/es-core/src/guis/GuiMsgBox.cpp	2025-10-19 16:30:22.798699460 +0900
+++ emulationstation_ab_swap/es-core/src/guis/GuiMsgBox.cpp	2025-10-19 16:41:27.506704960 +0900
@@ -73,7 +73,7 @@
 		return true;
 	}
 
-	if(mAcceleratorFunc && config->isMappedTo("b", input) && input.value != 0)
+	if(mAcceleratorFunc && config->isMappedTo("a", input) && input.value != 0)
 	{
 		mAcceleratorFunc();
 		return true;
diff -Naur emulationstation/es-core/src/guis/GuiTextEditPopup.cpp emulationstation_ab_swap/es-core/src/guis/GuiTextEditPopup.cpp
--- emulationstation/es-core/src/guis/GuiTextEditPopup.cpp	2025-10-19 16:30:22.798699460 +0900
+++ emulationstation_ab_swap/es-core/src/guis/GuiTextEditPopup.cpp	2025-10-19 16:41:27.506704960 +0900
@@ -56,7 +56,7 @@
 		return true;
 
 	// pressing back when not text editing closes us
-	if(config->isMappedTo("b", input) && input.value)
+	if(config->isMappedTo("a", input) && input.value)
 	{
 		delete this;
 		return true;
@@ -68,6 +68,6 @@
 std::vector<HelpPrompt> GuiTextEditPopup::getHelpPrompts()
 {
 	std::vector<HelpPrompt> prompts = mGrid.getHelpPrompts();
-	prompts.push_back(HelpPrompt("b", "back"));
+	prompts.push_back(HelpPrompt("a", "back"));
 	return prompts;
 }
